apply plugin: 'com.android.application'
apply plugin: 'AndResGuard'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        multiDexEnabled true  //transformDexArchiveWithExternalLibsDexMergerForDebug unable to merge dex 问题
        resConfigs "zh" //app瘦身 只支持中文，不支持国际化

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    signingConfigs {
        release {//发布版本的签名配置
            storeFile file('../app/keystore')
            keyAlias 'key0'
            storePassword 'zhenghao'
            keyPassword 'zhenghao'
        }
        debug {//调试版本的签名配置
            storeFile file('../app/keystore')
            keyAlias 'key0'
            storePassword 'zhenghao'
            keyPassword 'zhenghao'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    buildTypes {
        debug {
            //混淆
            minifyEnabled false
            shrinkResources false //前提是minifyEnabled为true
            zipAlignEnabled false
            jniDebuggable true
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk {
                //支持X86模拟器 'armeabi' , 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
                abiFilters  "armeabi-v7a",'x86'//
            }
            signingConfig signingConfigs.debug
        }

        release {
            //混淆
            minifyEnabled true
            shrinkResources false //前提是minifyEnabled为true  设置为true 有风险
            zipAlignEnabled true
            jniDebuggable false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk {
                //不支持X86架构 'armeabi' , 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
                abiFilters  "armeabi-v7a"
            }
            signingConfig signingConfigs.release
        }
    }

    //解决签名打包时 Error:(4) Error: "ssdk_instapager_login_html" is not translated in "en" (English) [MissingTranslation]
    lintOptions{
        checkReleaseBuilds false
        //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
        abortOnError false
    }

    //如果报 Cannot merge new index 65562 into a non-jumbo instruction! 这个问题则很容易解决，直接修改build.gradle，清理项目后重新sync编译
    dexOptions {
        jumboMode = true
    }
    //使用JAVA8解析  invokedynamic requires --min-sdk-version >= 26
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

//transformDexArchiveWithExternalLibsDexMergerForDebug' — Unable to merge dex
// 有的时候引入了多个三方库.在调用的时候会出现版本对应不上的原因,需要强制版本号统一
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '28.0.0'
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    kapt 'com.alibaba:arouter-compiler:1.2.2'
    implementation project(':moudle_sdk')
    implementation project(':moudle_home')
}

andResGuard {
    // mappingFile = file("./resource_mapping.txt")
    mappingFile = null
    use7zip = true
    useSign = true
    // 打开这个开关，会keep住所有资源的原始路径，只混淆资源的名字
    keepRoot = false
    // 设置这个值，会把arsc name列混淆成相同的名字，减少string常量池的大小
    fixedResName = "arg"
    // 打开这个开关会合并所有哈希值相同的资源，但请不要过度依赖这个功能去除去冗余资源
    mergeDuplicatedRes = false
    whiteList = [
            // for your icon
            "R.drawable.icon",
            "R.drawable.ic_*",

            "R.color.text_color_black_night",
            "R.color.bg_color_white_night",
            "R.color.bg_img_transparent_night",
            "R.color.lightgray_night",
            "R.color.menu_select_text_color_night",
            "R.color.menu_unSelect_text_color_night",
            "R.color.bottom_menu_line_night",
            "R.color.colorPrimaryDark_night",
            "R.color.colorPrimaryTrue_night",

            "R.color.text_color_black",
            "R.color.bg_color_white",
            "R.color.bg_img_transparent",
            "R.color.lightgray",
            "R.color.menu_select_text_color",
            "R.color.menu_unSelect_text_color",
            "R.color.bottom_menu_line",
            "R.color.colorPrimaryDark",
            "R.color.colorPrimaryTrue",


            // for fabric
            "R.string.com.crashlytics.*",
            // for google-services
            "R.string.google_app_id",
            "R.string.gcm_defaultSenderId",
            "R.string.default_web_client_id",
            "R.string.ga_trackingId",
            "R.string.firebase_database_url",
            "R.string.google_api_key",
            "R.string.google_crash_reporting_api_key"
    ]
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
    ]
    sevenzip {
        artifact = 'com.tencent.mm:SevenZip:1.2.17'
        //path = "/usr/local/bin/7za"
    }

    /**
     * 可选： 如果不设置则会默认覆盖assemble输出的apk
     **/
    // finalApkBackupPath = "${project.rootDir}/final.apk"

    /**
     * 可选: 指定v1签名时生成jar文件的摘要算法
     * 默认值为“SHA-1”
     **/
    // digestalg = "SHA-256"
}